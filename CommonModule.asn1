CommonModule DEFINITIONS AUTOMATIC TAGS ::= BEGIN

  EXPORTS ALL;

  RoleType        ::= ENUMERATED {root, targets, snapshot, timestamp}

  -- String types.
  Filename        ::= VisibleString (SIZE(1..32))
  -- No known path separator allowed in a strict filename.
  StrictFilename  ::= VisibleString (SIZE(1..32))
                                    (PATTERN "[^/\\]+")
  BitString       ::= BIT STRING    (SIZE(1..1024))
  OctetString     ::= OCTET STRING  (SIZE(1..1024))
  HexString       ::= VisibleString (SIZE(1..1024))
                                    (PATTERN "[0-9a-f]+")
  -- Table 1 of RFC 4648.
  Base64String    ::= VisibleString (SIZE(1..1024))
                                    (PATTERN "[A-Za-z0-9\+/=]+")
  Paths           ::= SEQUENCE OF Path
  Path            ::= VisibleString (SIZE(1..32))
                                    (PATTERN "[\w\*\\/]+")
  URLs            ::= SEQUENCE OF URL
  URL             ::= VisibleString (SIZE(1..1024))
  -- A generic identifier for vehicles, primaries, secondaries.
  Identifier      ::= VisibleString (SIZE(1..32))

  Natural         ::= INTEGER (0..MAX)
  Positive        ::= INTEGER (1..MAX)
  Length          ::= Positive
  Threshold       ::= Positive
  Version         ::= Positive
  -- The date and time in UTC encoded as a UNIX timestamp.
  UTCDateTime     ::= Positive

  BinaryData      ::= CHOICE {
    bitString     BitString,
    octetString   OctetString,
    hexString     HexString,
    base64String  Base64String
  }

  Hashes          ::= SEQUENCE OF Hash
  Hash            ::= SEQUENCE {
    function      HashFunction,
    digest        BinaryData
  }
  HashFunction ::= ENUMERATED {sha224, sha256, sha384, sha512, sha512-224,
                               sha512-256, ...}

  Keyids          ::= SEQUENCE OF Keyid
  -- Usually, a hash of a public key.
  Keyid           ::= HexString

  Signatures      ::= SEQUENCE OF Signature
  Signature       ::= SEQUENCE {
    keyid         Keyid,
    method        SignatureMethod,
    -- For efficient checking, sign the hash of the message instead of the
    -- message itself.
    hash          Hash,
    -- The signature itself.
    value         HexString
  }
  SignatureMethod ::= ENUMERATED {rsassa-pss, ed25519, ...}

  PublicKeys      ::= SEQUENCE OF PublicKey
  PublicKey       ::= SEQUENCE {
    publicKeyid     Keyid,
    publicKeyType   PublicKeyType,
    publicKeyValue  BinaryData
  }
  PublicKeyType   ::= ENUMERATED {rsa, ed25519, ...}

END
